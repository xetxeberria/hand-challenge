import * as fs from "fs";

type Instruction = "ğŸ‘‰" | "ğŸ‘ˆ" | "ğŸ‘†" | "ğŸ‘‡" | "ğŸ¤œ" | "ğŸ¤›" | "ğŸ‘Š";

export class Translator {
  private readonly instructions = new Map<Instruction, Function>([
    ["ğŸ‘‰", () => {}],
    ["ğŸ‘ˆ", () => {}],
    ["ğŸ‘†", () => {}],
    ["ğŸ‘‡", () => {}],
    ["ğŸ¤œ", () => {}],
    ["ğŸ¤›", () => {}],
    ["ğŸ‘Š", () => {}]
  ]);

  async run(inputFilePath: string): Promise<string> {
    const fileContent = (await fs.promises.readFile(inputFilePath)).toString().trim();
    const fileInstructions = Array.from(fileContent) as Array<Instruction>;

    console.log(fileInstructions);

    return "";
  }
}
