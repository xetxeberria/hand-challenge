import * as fs from "fs";

type Instruction = "ğŸ‘‰" | "ğŸ‘ˆ" | "ğŸ‘†" | "ğŸ‘‡" | "ğŸ¤œ" | "ğŸ¤›" | "ğŸ‘Š";

export class Translator {
  private readonly instructions = new Map<Instruction, Function>([
    ["ğŸ‘‰", () => this.increasePointer()],
    ["ğŸ‘ˆ", () => this.decreasePointer()],
    ["ğŸ‘†", () => this.increaseValue()],
    ["ğŸ‘‡", () => this.decreaseValue()],
    ["ğŸ¤œ", () => this.startLoop()],
    ["ğŸ¤›", () => this.endLoop()],
    ["ğŸ‘Š", () => this.displayCurrentCharacter()]
  ]);

  async run(inputFilePath: string): Promise<string> {
    const fileContent = (await fs.promises.readFile(inputFilePath)).toString().trim();
    const fileInstructions = Array.from(fileContent) as Array<Instruction>;

    console.log(fileInstructions);

    return "";
  }

  private increasePointer(): void {}

  private decreasePointer(): void {}

  private increaseValue(): void {}

  private decreaseValue(): void {}

  private startLoop(): void {}

  private endLoop(): void {}

  private displayCurrentCharacter(): void {}
}
